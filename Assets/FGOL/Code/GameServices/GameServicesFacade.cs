using FGOL.Utilities;
using System;
using UnityEngine;

public class GameServicesFacade : AutoGeneratedSingleton<GameServicesFacade>
{
    private GameServicesInterface m_interface = null;

    public void Init()
    {
#if GOOGLE_PLAY_SERVICES && UNITY_ANDROID && !UNITY_EDITOR
        m_interface = new PlayGameServicesInterface();
#elif UNITY_IPHONE && !UNITY_EDITOR
        m_interface = new GameCenterServicesInterface();
#elif AMAZON && UNITY_ANDROID && !UNITY_EDITOR
        m_interface = new AmazonGameServicesInterface();
#else
        m_interface = new NullGameServicesInterface();
#endif

        m_interface.Init();
    }

    public void RegisterAchievement(string lookupName, GameServicesInterface.AchievementDef def)
    {
        m_interface.RegisterAchievement(lookupName, def);
    }

    public void RegisterLeaderboard(string lookupName, GameServicesInterface.LeaderboardDef def)
    {
        m_interface.RegisterLeaderboard(lookupName, def);
    }

	/// <summary>
	/// Logs in user to social providers. Force option enables UI if silent attempt fails (Android only).
	/// </summary>
    public void Authenticate(Action<bool> onAuthCallback, bool force = false)
    {
        m_interface.Authenticate(onAuthCallback, force);
    }

    public bool IsLoggedIn()
    {
        return m_interface.IsLoggedIn();
    }

    public void ShowLockedAchievement(string achievementID)
    {
        m_interface.ShowLockedAchievement(achievementID);
    }

    public void UnlockAchievement(string achievementID)
    {
        m_interface.UnlockAchievement(achievementID);
    }

    public void UpdateAchievement(string achievementID, float previousPercentage, float currentPercentage)
    {
        m_interface.UpdateAchievement(achievementID, previousPercentage, currentPercentage);
    }

    public void ShowAchievements()
    {
        m_interface.ShowAchievements();
    }

    public void PostScore(string leaderboardID, long score)
    {
        m_interface.PostScore(leaderboardID, score);
    }

    public void ShowLeaderboard(string leaderboardID = null)
    {
        m_interface.ShowLeaderboard(leaderboardID);
    }
}